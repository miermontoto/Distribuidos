/*
 * Please do not edit this file.
 * It was generated using rpcgen.
 */

#ifndef _CALCULADORA_H_RPCGEN
#define _CALCULADORA_H_RPCGEN

#include <rpc/rpc.h>


#ifdef __cplusplus
extern "C" {
#endif


typedef char *Texto;

struct Operandos {
	int op1;
	int op2;
};
typedef struct Operandos Operandos;

struct Resultado {
	int caso;
	union {
		int n;
		float x;
		Texto error;
	} Resultado_u;
};
typedef struct Resultado Resultado;

#define CALCULADORA 0x40001234
#define BASICA 1

#if defined(__STDC__) || defined(__cplusplus)
#define sumar 1
extern  int * sumar_1(Operandos *, CLIENT *);
extern  int * sumar_1_svc(Operandos *, struct svc_req *);
#define restar 2
extern  int * restar_1(Operandos *, CLIENT *);
extern  int * restar_1_svc(Operandos *, struct svc_req *);
#define multiplicar 3
extern  int * multiplicar_1(Operandos *, CLIENT *);
extern  int * multiplicar_1_svc(Operandos *, struct svc_req *);
#define dividir 4
extern  Resultado * dividir_1(Operandos *, CLIENT *);
extern  Resultado * dividir_1_svc(Operandos *, struct svc_req *);
extern int calculadora_1_freeresult (SVCXPRT *, xdrproc_t, caddr_t);

#else /* K&R C */
#define sumar 1
extern  int * sumar_1();
extern  int * sumar_1_svc();
#define restar 2
extern  int * restar_1();
extern  int * restar_1_svc();
#define multiplicar 3
extern  int * multiplicar_1();
extern  int * multiplicar_1_svc();
#define dividir 4
extern  Resultado * dividir_1();
extern  Resultado * dividir_1_svc();
extern int calculadora_1_freeresult ();
#endif /* K&R C */

/* the xdr functions */

#if defined(__STDC__) || defined(__cplusplus)
extern  bool_t xdr_Texto (XDR *, Texto*);
extern  bool_t xdr_Operandos (XDR *, Operandos*);
extern  bool_t xdr_Resultado (XDR *, Resultado*);

#else /* K&R C */
extern bool_t xdr_Texto ();
extern bool_t xdr_Operandos ();
extern bool_t xdr_Resultado ();

#endif /* K&R C */

#ifdef __cplusplus
}
#endif

#endif /* !_CALCULADORA_H_RPCGEN */
